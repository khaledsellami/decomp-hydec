hp_template = dict(clustering=dict(
                       atoms_path="path_to_full_class_or_method_list",
                       strategy="sequential",
                       max_iterations=50,
                       min_samples=2,
                       epsilon_step=0.05,
                       include_outliers=False
                    ),
                   evaluation=dict(
                       structural_data_path="path_to_structural_data",
                       semantic_data_path="path_to_semantic_data",
                       metrics=[],
                       threshold=50
                   ),
                   analysis=[
                       (
                           "word_embedding",
                           dict(
                               atoms_path="path_to_class_or_method_list",
                               features_path="path_to_word_lists",
                               epsilon=0.15,
                               model=dict(
                                   type="fasttext",
                                   pooling_approach="avg",
                                   dim=300
                               ),
                               fine_tuned=False,
                               aggregation="mean"
                           )
                       ),
                       (
                           "dynamic",
                           dict(
                               atoms_path="path_to_class_or_method_list",
                               features_path="path_to_log_data",
                               epsilon=0.65,
                               similarity="call"
                           )
                       ),
                       (
                           "structural",
                           dict(
                               atoms_path="path_to_class_or_method_list",
                               features_path="path_to_structural_data",
                               epsilon=0.65,
                               similarity="call"
                           )
                       ),
                       (
                           "semantic",
                           dict(
                               atoms_path="path_to_class_or_method_list",
                               features_path="path_to_semantic_data",
                               atoms_tokens="path_to_class_or_method_words",
                               epsilon=0.65,
                               aggregation="mean"
                           )
                       ),
                       (
                           "bert_embedding",
                           dict(
                               atoms_path="path_to_class_or_method_list",
                               features_path="path_to_semantic_data",
                               embeddings_path="path_to_recorded_embeddings", # optional
                               epsilon=0.65,
                               aggregation="mean",
                               model_name="bert-base-uncased"
                           )
                       )
                   ]
)